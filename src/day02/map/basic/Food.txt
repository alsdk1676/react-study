import React, { useState } from 'react';

const Checkbox = () => {

  const [message, setMessage] = useState([]);

  const onClickToCheck = (e) => {
    console.log("로직 실행!")
    let value = e.target.value; // 중복
    if(e.target.checked){
      // state는 상태, 즉 주소값이 변경되어야 함
      // push는 기존의 배열에 값을 넣는 것이기 때문에 주소값 변경X
      // concat을 사용해서 주소값 변경 : 기존의 값을 새로운 배열로 리턴 => 주소값 변경됨 
      // setMessage(message.concat(e.target.value)) 
      // setMessage(message.concat(value)) // 덮어쓰기 오류 => 배열로 추가하기(여러 개 넣어야 하기 때문에)
      setMessage([...message, value]) // 스프레드 문법 (값들을 하나씩 가져와서 뿌리기)
    }else{
      setMessage(message.filter((m) => m !== value))
    }
  }
  console.log(message)
  return (
    <div>
      <div>
        <span>front-end</span>
        <input type="checkbox" value="front-end" onClick={onClickToCheck} />
      </div>
      <div>
        <span>back-end</span>
        <input type="checkbox" value="back-end" onClick={onClickToCheck} />
      </div>
      <div>
        <span>AI</span>
        <input type="checkbox" value="AI" onClick={onClickToCheck} />
      </div>
      <div>
        <h1>{message.map((m, i) => <p key={i}>{m}</p>)}</h1>
      </div>
    </div>
  );
};

export default Checkbox;